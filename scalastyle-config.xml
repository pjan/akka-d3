<scalastyle commentFilter="enabled">
    <name>Scalastyle standard configuration</name>
    <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true" />
    <check level="error" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true" />
    <check level="error" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[180]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>

    <!--<check level="error" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>-->
    <!--<check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>-->

    <!--<check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="false">-->
        <!--<parameters>-->
            <!--<parameter name="maxParameters"><![CDATA[8]]></parameter>-->
        <!--</parameters>-->
    <!--</check>-->
    <!--<check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="false">-->
        <!--<parameters>-->
            <!--<parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>-->
        <!--</parameters>-->
    <!--</check>-->
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.ReturnChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.NullChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true" />
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[20]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="false">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true" />
    <check level="error" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false" />
    <check level="error" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true">
        <parameters>
            <parameter name="ignoreOverride">false</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.file.RegexChecker" enabled="true" customId="kind.projector.lambda">
        <parameters>
            <parameter name="regex">Lambda\[</parameter>
        </parameters>
        <customMessage><![CDATA[Use Greek characters in a kind projection (λ[α => ...]).]]></customMessage>
    </check>
    <check level="error" class="org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker" enabled="true">
        <parameters>
            <parameter name="tokens">PACKAGE, WHILE, CASE, NEW, DO, EQUALS, SUBTYPE, SEALED, TYPE, FINAL, IMPORT, RETURN, VAL, VAR, ELSE, MATCH, TRY, SUPERTYPE, OP, CATCH, THROW, CLASS, DEF, FOR, LARROW, ABSTRACT, IF, OBJECT, COMMA, YIELD, PIPE, IMPLICIT, LAZY, TRAIT, FORSOME, FINALLY, OVERRIDE, ARROW, EXTENDS</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="true">
        <parameters>
            <parameter name="tokens">OP, PIPE, FORSOME</parameter>
        </parameters>
    </check>
    <check level="error" class="org.scalastyle.scalariform.ForBraceChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true" />
    <check level="error" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="false" />
    <check level="error" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="false" />
    <check level="error" class="org.scalastyle.scalariform.TokenChecker" enabled="false">
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
</scalastyle>
